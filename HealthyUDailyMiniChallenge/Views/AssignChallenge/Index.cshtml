@*@model HeathyUDailyMiniChallenge.Models.ChallengeUser
*@

@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/resources.js"></script>
<script src="~/Scripts/knockout-2.2.0.js"></script>
@*<script src="~/Scripts/app.js"></script>*@

<form data-bind="submit: addAssignChallenge" id="new-assignChallenge">
<div class="challenges">
    <h2>Available Challenges: </h2>
    <select class="selectAvailable" data-bind="options: challenges, optionsText: 'challengeDescription', selectedOptions: temporaryChosenChallenges" multiple= "true"></select>
    <input class="chooseButton" type="button" value="Choose Challenges >>" data-bind="click: sendToChosen" />
    <select class="chosen" data-bind="foreach:chosenChallenges" multiple="true">
        <option data-bind="text: $data.challengeDescription"></option>
    </select>
</div>

<div class="users">
<h2>Available Users: </h2>
<select data-bind="options: challengeUsers, optionsText: 'name', selectedOptions: temporaryChosenUsers" multiple= "true"></select>

    <input class="chooseButton" type="button" value="Choose Users >>" data-bind="click: sendToChosenChallengeUsers" />
    <select class="chosen" data-bind="foreach: chosenChallengeUsers" multiple="true">
        <option data-bind="text: $data.name"></option>
    </select>
    </div>

<button type="submit" value="Save" />
    </form>

<div id="complete" />

<script type="text/javascript">
    var challengeUsers;
    var challenges;
    var temporaryChosen;
    var temporaryChosenUsers;
    var chosenChallenges;
    var chosenChallengeUsers;
    var challengesResource = new Resource('/Api/Challenge');
    var gettingChallenges = challengesResource.get();
    
    var challengeUsersResource = new Resource('/Api/ChallengeUsers');
    var gettingChallengeUsers = challengeUsersResource.get();

    var assignChallengeResource = new Resource('/Api/AssignChallengeService');

    var AssignChallengeVM = function (chosenChallenges, chosenChallengeUsers) {

        this.assignedChallenges = chosenChallenges;
        this.assignedUsers = chosenChallengeUsers;
    }



    gettingChallenges.done(function (challengesFromServer) { challenges = challengesFromServer; });
 
    gettingChallengeUsers.done(function (challengeUsersFromServer) { challengeUsers = challengeUsersFromServer; });

    $.when(gettingChallenges, gettingChallengeUsers).done(readyToRock);

    function sendToChosen() {
        var challengesTemp = this.temporaryChosenChallenges();
        for(i=0; i<challengesTemp.length; i++)
        {
            var challengei = challengesTemp[i];
            this.chosenChallenges.push({"challengeDescription": challengei.challengeDescription});
            this.challenges.remove(challengei);
        }

        this.temporaryChosenChallenges.removeAll();
    }

    function sendToChosenChallengeUsers() {
        var usersTemp = this.temporaryChosenUsers();
        for (i = 0; i < usersTemp.length; i++) {
            var usersi = usersTemp[i];
            this.chosenChallengeUsers.push({ "name": usersi.name });
            this.challengeUsers.remove(usersi);
        }

        this.temporaryChosenUsers.removeAll();
    }

    function readyToRock() {
        Window.viewModel = new ViewModel();
        ko.applyBindings(Window.viewModel);
    }
    
    function ViewModel() {
        var that = this;
        this.temporaryChosenChallenges = ko.observableArray([]);
        this.temporaryChosenUsers = ko.observableArray([]);
        this.challengeUsers = ko.observableArray(challengeUsers);
        this.chosenChallengeUsers = ko.observableArray([]);
        this.challenges = ko.observableArray(challenges);
        this.chosenChallenges = ko.observableArray([]);

        that.challengeUserToAdd = ko.observable(new AssignChallengeVM(this.chosenChallenges(), this.chosenChallengeUsers()));

        that.addAssignChallenge = function () {
 
            var savingAssignChallenge = assignChallengeResource.post(ko.toJS(that.challengeUserToAdd()));
            savingAssignChallenge.done(function () {
                $('#complete').html("Saved!!!!");
                });
        };
    }
</script>

